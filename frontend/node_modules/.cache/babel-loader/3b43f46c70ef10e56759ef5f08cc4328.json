{"ast":null,"code":"var _jsxFileName = \"/media/sara/589657BF96579C76/task/frontend/src/App.js\";\nimport './App.css';\nimport React from \"react\";\nimport Login from \"./components/login/login\";\nimport DisplayTodo from \"./components/Todo/DisplayTodo\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport AddNew from \"./components/Todo/addNew\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isLogin: false,\n      token: localStorage['token'],\n      tasks: []\n    };\n  }\n\n  async componentWillMount() {\n    let res = await fetch(`http://localhost:8000/api/tasks`, {\n      method: \"GET\",\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Authorization\": `Bearer ${this.state.token}`\n      }\n    }).then(res => res.json()).then(result => {\n      if (result['message'] == \"Unauthenticated.\") {\n        this.setState({\n          isLogin: false\n        });\n      } else if (result) {\n        this.setState({\n          isLogin: true,\n          tasks: result\n        });\n      }\n    });\n    console.log(\"tasks\", this.state.isLogin);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: this.state.isLogin ? /*#__PURE__*/_jsxDEV(DisplayTodo, {\n            tasks: this.state.tasks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 38\n          }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 78\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/Register\",\n          children: this.state.isLogin ? /*#__PURE__*/_jsxDEV(AddNew, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/media/sara/589657BF96579C76/task/frontend/src/App.js"],"names":["React","Login","DisplayTodo","AddNew","BrowserRouter","Router","Switch","Route","Link","App","Component","constructor","state","isLogin","token","localStorage","tasks","componentWillMount","res","fetch","method","headers","then","json","result","setState","console","log","render"],"mappings":";AACA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAO,kCAAP;AACA,OAAOC,MAAP,MAAoB,0BAApB;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,IAJF,QAKO,kBALP;;;AAMA,MAAMC,GAAN,SAAkBT,KAAK,CAACU,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAE;AACX;AACA,SAAKC,KAAL,GAAW;AACTC,MAAAA,OAAO,EAAE,KADA;AAETC,MAAAA,KAAK,EAAGC,YAAY,CAAC,OAAD,CAFX;AAGTC,MAAAA,KAAK,EAAC;AAHG,KAAX;AAKC;;AAEyB,QAAlBC,kBAAkB,GAAG;AACzB,QAAIC,GAAG,GAAG,MAAMC,KAAK,CAAG,iCAAH,EAAqC;AAC1DC,MAAAA,MAAM,EAAE,KADkD;AAE1DC,MAAAA,OAAO,EAAE;AACT,kBAAU,kBADD;AAET,yBAAmB,UAAS,KAAKT,KAAL,CAAWE,KAAM;AAFpC;AAFiD,KAArC,CAAL,CAOfQ,IAPe,CAOVJ,GAAG,IAAIA,GAAG,CAACK,IAAJ,EAPG,EAQfD,IARe,CAQVE,MAAM,IAAI;AAEb,UAAGA,MAAM,CAAC,SAAD,CAAN,IAAqB,kBAAxB,EAA2C;AAC1C,aAAKC,QAAL,CAAc;AACZZ,UAAAA,OAAO,EAAE;AADG,SAAd;AAIA,OALD,MAMK,IAAGW,MAAH,EAAU;AACd,aAAKC,QAAL,CAAc;AACZZ,UAAAA,OAAO,EAAE,IADG;AAEZG,UAAAA,KAAK,EAAGQ;AAFI,SAAd;AAIA;AAKH,KA1Be,CAAhB;AA2BAE,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoB,KAAKf,KAAL,CAAWC,OAA/B;AAEC;;AAGPe,EAAAA,MAAM,GAAE;AACN,wBACE,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,KAAlB;AAAA,6BACI,QAAC,MAAD;AAAA,gCACI,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAA,oBACC,KAAKhB,KAAL,CAAWC,OAAX,gBAAsB,QAAC,WAAD;AAAa,YAAA,KAAK,EAAE,KAAKD,KAAL,CAAWI;AAA/B;AAAA;AAAA;AAAA;AAAA,kBAAtB,gBAA8D,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAD/D;AAAA;AAAA;AAAA;AAAA,gBADJ,eAIG,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,WAAlB;AAAA,oBACE,KAAKJ,KAAL,CAAWC,OAAX,gBAAqB,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,kBAArB,gBAA+B,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADjC;AAAA;AAAA;AAAA;AAAA,gBAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AAxD+B;;AA4DlC,eAAeJ,GAAf","sourcesContent":["\nimport './App.css';\nimport React from \"react\";\nimport Login from \"./components/login/login\"\nimport DisplayTodo from \"./components/Todo/DisplayTodo\"\nimport 'bootstrap/dist/css/bootstrap.css';\nimport AddNew  from \"./components/Todo/addNew\"\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state={\n      isLogin: false,  \n      token : localStorage['token'],\n      tasks:[]\n    }\n    }\n      \n      async componentWillMount() {\n        let res = await fetch( `http://localhost:8000/api/tasks`, {\n        method: \"GET\",\n        headers: {\n        \"Accept\": \"application/json\",\n        \"Authorization\" : `Bearer ${this.state.token}`,\n    }\n        })\n        .then(res => res.json())\n        .then(result => {\n      \n           if(result['message'] == \"Unauthenticated.\"){\n            this.setState({\n              isLogin: false\n          })\n\n           }\n           else if(result){\n            this.setState({\n              isLogin: true ,\n              tasks : result\n          })\n           }\n\n        \n       \n        \n        });\n        console.log(\"tasks\",this.state.isLogin)\n        \n        }\n  \n\n  render(){\n    return (\n      <Router className=\"App\">\n          <Switch>\n              <Route exact path=\"/\">\n              {this.state.isLogin ?  <DisplayTodo tasks={this.state.tasks}/>:<Login/> }\n             </Route>\n             <Route exact path=\"/Register\">\n              {this.state.isLogin ? <AddNew/>:<Login/> }\n             </Route>\n        </Switch>\n      </Router>\n    );\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}