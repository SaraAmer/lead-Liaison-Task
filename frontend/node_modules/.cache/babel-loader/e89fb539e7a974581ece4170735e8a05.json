{"ast":null,"code":"var _jsxFileName = \"/media/sara/589657BF96579C76/task/frontend/src/App.js\";\nimport './App.css';\nimport React from \"react\";\nimport Login from \"./components/login/login\";\nimport DisplayTodo from \"./components/Todo/DisplayTodo\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isLogin: false,\n      token: localStorage['token']\n    };\n  }\n\n  async componentWillMount() {\n    let res = await fetch(`http://localhost:8000/api/tasks`, {\n      method: \"GET\",\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Authorization\": `Bearer ${this.state.toke}`\n      }\n    }).then(res => res.json()).then(result => {\n      if (result.message == \"Unauthenticated\") {\n        this.setState({\n          isLogin: false\n        });\n      } else if (result) {\n        this.setState({\n          isLogin: true\n        });\n      }\n\n      console.log('resultt', result);\n    });\n    console.log(\"tasks\", this.state.isLogin);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(DisplayTodo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/media/sara/589657BF96579C76/task/frontend/src/App.js"],"names":["React","Login","DisplayTodo","BrowserRouter","Router","Switch","Route","Link","App","Component","constructor","state","isLogin","token","localStorage","componentWillMount","res","fetch","method","headers","toke","then","json","result","message","setState","console","log","render"],"mappings":";AACA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAO,kCAAP;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,IAJF,QAKO,kBALP;;;AAMA,MAAMC,GAAN,SAAkBR,KAAK,CAACS,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAE;AACX;AACA,SAAKC,KAAL,GAAW;AACTC,MAAAA,OAAO,EAAE,KADA;AAETC,MAAAA,KAAK,EAAGC,YAAY,CAAC,OAAD;AAFX,KAAX;AAIC;;AAEyB,QAAlBC,kBAAkB,GAAG;AACzB,QAAIC,GAAG,GAAG,MAAMC,KAAK,CAAG,iCAAH,EAAqC;AAC1DC,MAAAA,MAAM,EAAE,KADkD;AAE1DC,MAAAA,OAAO,EAAE;AACT,kBAAU,kBADD;AAET,yBAAmB,UAAS,KAAKR,KAAL,CAAWS,IAAK;AAFnC;AAFiD,KAArC,CAAL,CAOfC,IAPe,CAOVL,GAAG,IAAIA,GAAG,CAACM,IAAJ,EAPG,EAQfD,IARe,CAQVE,MAAM,IAAI;AACb,UAAGA,MAAM,CAACC,OAAP,IAAkB,iBAArB,EAAuC;AACtC,aAAKC,QAAL,CAAc;AACZb,UAAAA,OAAO,EAAE;AADG,SAAd;AAIA,OALD,MAMK,IAAGW,MAAH,EAAU;AACd,aAAKE,QAAL,CAAc;AACZb,UAAAA,OAAO,EAAE;AADG,SAAd;AAGA;;AAGJc,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAwBJ,MAAxB;AAEC,KAxBe,CAAhB;AAyBAG,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoB,KAAKhB,KAAL,CAAWC,OAA/B;AAEC;;AAGPgB,EAAAA,MAAM,GAAE;AACN,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BAGH,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAHG;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAhD+B;;AAoDlC,eAAepB,GAAf","sourcesContent":["\nimport './App.css';\nimport React from \"react\";\nimport Login from \"./components/login/login\"\nimport DisplayTodo from \"./components/Todo/DisplayTodo\"\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state={\n      isLogin: false,  \n      token : localStorage['token']\n    }\n    }\n      \n      async componentWillMount() {\n        let res = await fetch( `http://localhost:8000/api/tasks`, {\n        method: \"GET\",\n        headers: {\n        \"Accept\": \"application/json\",\n        \"Authorization\" : `Bearer ${this.state.toke}`,\n    }\n        })\n        .then(res => res.json())\n        .then(result => {\n           if(result.message == \"Unauthenticated\"){\n            this.setState({\n              isLogin: false\n          })\n\n           }\n           else if(result){\n            this.setState({\n              isLogin: true\n          })\n           }\n\n        \n        console.log('resultt' , result)\n        \n        });\n        console.log(\"tasks\",this.state.isLogin)\n        \n        }\n  \n\n  render(){\n    return (\n      <div className=\"App\">\n        {/* <Login/>\n   */}\n   <DisplayTodo/>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}