{"ast":null,"code":"var _jsxFileName = \"/media/sara/589657BF96579C76/task/frontend/src/components/Todo/DisplayTodo.js\";\nimport React from \"react\";\nimport TodoItem from \"./TodoItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DisplayTodo extends React.Component {\n  constructor() {\n    super();\n\n    this.delete = id => {\n      console.log(id);\n    };\n\n    this.state = {\n      Tasks: [],\n      token: localStorage['token']\n    };\n  }\n\n  async componentWillMount() {\n    let res = await fetch(`http://localhost:8000/api/tasks`, {\n      method: \"GET\",\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Authorization\": `Bearer ${this.state.token}`\n      }\n    }).then(res => res.json()).then(result => {\n      console.log(\"resulttttttttttttttttttttt\", result);\n      this.setState({\n        Tasks: result\n      });\n    });\n    console.log(this.state.Tasks);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.Tasks.map((task, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            class: \"list-group\",\n            children: [index, /*#__PURE__*/_jsxDEV(TodoItem, {\n              task: task,\n              delete: this.delete,\n              index: index\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 31\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default DisplayTodo;","map":{"version":3,"sources":["/media/sara/589657BF96579C76/task/frontend/src/components/Todo/DisplayTodo.js"],"names":["React","TodoItem","DisplayTodo","Component","constructor","delete","id","console","log","state","Tasks","token","localStorage","componentWillMount","res","fetch","method","headers","then","json","result","setState","render","map","task","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,WAAN,SAA0BF,KAAK,CAACG,SAAhC,CAAyC;AACrCC,EAAAA,WAAW,GAAE;AACT;;AADS,SA4BTC,MA5BS,GA4BDC,EAAD,IAAM;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AAIF,KAjCQ;;AAET,SAAKG,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAG,EADC;AAETC,MAAAA,KAAK,EAAGC,YAAY,CAAC,OAAD;AAFX,KAAb;AAIH;;AACuB,QAAlBC,kBAAkB,GAAG;AACvB,QAAIC,GAAG,GAAG,MAAMC,KAAK,CAAG,iCAAH,EAAqC;AAC1DC,MAAAA,MAAM,EAAE,KADkD;AAE1DC,MAAAA,OAAO,EAAE;AACT,kBAAU,kBADD;AAET,yBAAmB,UAAS,KAAKR,KAAL,CAAWE,KAAM;AAFpC;AAFiD,KAArC,CAAL,CAOfO,IAPe,CAOVJ,GAAG,IAAIA,GAAG,CAACK,IAAJ,EAPG,EAQfD,IARe,CAQVE,MAAM,IAAI;AACZb,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAAyCY,MAAzC;AAEA,WAAKC,QAAL,CAAc;AACVX,QAAAA,KAAK,EAAEU;AADG,OAAd;AAKH,KAhBe,CAAhB;AAiBAb,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,KAAvB;AAEC;;AAOLY,EAAAA,MAAM,GAAE;AACJ,wBAEI;AAAA,gBAEO,KAAKb,KAAL,CAAWC,KAAX,CAAiBa,GAAjB,CAAqB,CAACC,IAAD,EAAQC,KAAR,KAAgB;AACjC,4BAAO;AAAA,iCACF;AAAI,YAAA,KAAK,EAAC,YAAV;AAAA,uBACKA,KADL,eAED,QAAC,QAAD;AAAU,cAAA,IAAI,EAAED,IAAhB;AAAsB,cAAA,MAAM,EAAE,KAAKnB,MAAnC;AAA2C,cAAA,KAAK,EAAEoB;AAAlD;AAAA;AAAA;AAAA;AAAA,oBAFC;AAAA;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA,gBAAP;AAQH,OATD;AAFP;AAAA;AAAA;AAAA;AAAA,YAFJ;AAiBH;;AArDoC;;AAuDzC,eAAevB,WAAf","sourcesContent":["import React from \"react\";\nimport TodoItem from \"./TodoItem\"\n\nclass DisplayTodo extends React.Component{\n    constructor(){\n        super();\n        this.state = {\n            Tasks : [], \n            token : localStorage['token']\n        }\n    }\n    async componentWillMount() {\n        let res = await fetch( `http://localhost:8000/api/tasks`, {\n        method: \"GET\",\n        headers: {\n        \"Accept\": \"application/json\",\n        \"Authorization\" : `Bearer ${this.state.token}`,\n    }\n        })\n        .then(res => res.json())\n        .then(result => {\n            console.log(\"resulttttttttttttttttttttt\",result);\n\n            this.setState({\n                Tasks: result\n            })\n        \n        \n        });\n        console.log(this.state.Tasks)\n        \n        }\n        delete=(id)=>{\n           console.log(id);\n            \n           \n\n        }\n    render(){\n        return (\n\n            <div>\n               {\n                   this.state.Tasks.map((task , index)=>{\n                       return(<div>\n                            <ul class=\"list-group\">\n                                {index}\n                           <TodoItem task={task} delete={this.delete} index={index}/>\n                           </ul>\n\n\n                       </div>);\n                   })\n               }\n            </div>\n        );\n    }\n}\nexport default DisplayTodo;"]},"metadata":{},"sourceType":"module"}